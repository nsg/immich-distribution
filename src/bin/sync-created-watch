#!/bin/bash

if [ -z $SNAP ]; then
    . src/bin/sync
else
    . $SNAP/bin/sync
fi

block_sync_enabled
block_immich_server_ready

watch_created() {
    cat - | while read -r changed_path; do
        if ! ignore_path "$changed_path"; then

            init_file_size="$(stat --printf="%s" "$changed_path")"
            while true; do
                sleep 1
                current_file_size="$(stat --printf="%s" "$changed_path")"
                if [ "$init_file_size" -eq "$current_file_size" ]; then
                    break
                else
                    init_file_size="$current_file_size"
                fi
            done

            file_hash="$(sha1sum "$changed_path")"
            file_hash="${file_hash%% *}"
            user_id="$(extract_user_id_from_path "$changed_path")"
            path="$(extract_relative_path "$changed_path")"

            payload=$(jq --null-input \
                --arg path "$path" \
                --arg file_hash "$file_hash" \
                '{"path": $path, "file_hash": $file_hash}'
            )

            add_work_queue "add-file" "$user_id" "$payload"
        fi
    done
}

for KEY in $(get_keys); do
    USER_ID="$(user_id $KEY)"

    if [ ! -z "$USER_ID" ]; then
        USER_PATH="$SNAP_COMMON/sync/$USER_ID"
        mkdir -p "$USER_PATH"

        {
            echo "Watch for created events in $USER_PATH"
            fswatch --recursive --event Created --event Updated "$USER_PATH" | watch_created
        } &
    fi
done
wait
