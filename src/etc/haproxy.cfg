defaults
  mode http
  option forwardfor
  timeout connect 10s
  timeout client  1m
  timeout server  1m
  errorfile 503 "${SNAP}/etc/5xx.http"

frontend http
    "${HAPROXY_HTTP_FRONTEND_STATE}"
    bind ${HAPROXY_HTTP_BIND}

    use_backend acme if { path_beg /.well-known/acme-challenge/ }
    use_backend stats if { path_beg /haproxy }
    default_backend be_server

frontend https
    "${HAPROXY_HTTPS_FRONTEND_STATE}"
    bind ${HAPROXY_HTTPS_BIND} ssl strict-sni crt "${ACME_CONFIG_PATH}/haproxy/" alpn h2,http/1.1

    use_backend acme if { path_beg /.well-known/acme-challenge/ }
    use_backend stats if { path_beg /haproxy }
    default_backend be_server

backend be_server
    option httpchk
    http-check send meth GET uri /server-info/ping
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    server immich-server 127.0.0.1:3001 maxconn 64 check inter 5s fall 2 rise 6

backend acme
    server acme 127.0.0.1:${ACME_PORT} maxconn 16

#
# The backends below are never really used. I have added them to HAProxy so
# tests/test_haproxy.sh will wait for service to fully start before the
# selenium tests triggers. This will also detect and visualize problems.
#

backend be_ml
    option httpchk
    http-check send meth GET uri /ping
    server ml 127.0.0.1:3003 maxconn 7 check inter 10s fall 2 rise 6

backend be_postgres
    mode tcp
    server postgres 127.0.0.1:5432 check

backend be_redis
    mode tcp
    server redis 127.0.0.1:6379 check

backend stats
  stats enable
  stats hide-version
  stats uri /haproxy
