name: immich-distribution
title: Immich Distribution
base: core20
version: '0.1'
summary: This is an Immich Distribution packaged inside a snap package.
description: |
  This is an Immich Distribution packaged inside a snap package.
  The package is inspired of the official Immich images. It will be
  similar, but not identical with the official Docker-based
  installation. It will ship the same software, but with limited
  customability. Extra tools are included, they should be
  non-intrusive and you can ignore them if you prefer.

grade: devel
confinement: strict
architectures:
  - amd64

system-usernames:
  snap_daemon: shared

layout:
  $SNAP/usr/src/app/.reverse-geocoding-dump:
    symlink: $SNAP_COMMON/reverse-geocoding-dump
  $SNAP/usr/src/app/upload:
    symlink: $SNAP_COMMON/upload

apps:
  psql:
    command: bin/psql
    plugs:
      - network

  postgres:
    command: bin/postgres
    daemon: simple
    plugs:
      - network-bind

  redis-server:
    command: bin/redis-server $SNAP/etc/redis.conf
    daemon: simple
    plugs:
      - network-bind

  immich-server:
    command: bin/immich-server
    daemon: simple
    after:
      - redis-server
      - postgres
    plugs:
      - network-bind
      - network

  immich-microservices:
    command: bin/immich-microservices
    daemon: simple
    after:
      - redis-server
      - postgres
    plugs:
      - network-bind
      - network

  immich-web:
    command: bin/immich-web
    daemon: simple
    after:
      - redis-server
      - postgres
    plugs:
      - network-bind
      - network

  immich-machine-learning:
    command: bin/immich-machine-learning
    daemon: simple
    after:
      - redis-server
      - postgres
    plugs:
      - network-bind
      - network

  haproxy:
    command: bin/haproxy -W -f $SNAP/etc/haproxy.cfg -p $SNAP_DATA/haproxy.pid
    daemon: simple
    plugs:
      - network-bind
      - network

parts:

  #
  # This part downloads a binary release of node
  #
  node:
    plugin: nil
    override-build: |
      if [ ! -f "$SNAPCRAFT_PART_INSTALL/bin/node" ]; then
        curl -s https://nodejs.org/dist/v16.19.1/node-v16.19.1-linux-x64.tar.gz \
        | tar xzf - -C "$SNAPCRAFT_PART_INSTALL" --no-same-owner --strip-components=1
      fi

  #
  # I have overridden the entire build stage, it's based on the commands
  # provided in the Immich Server Dockerfile.
  #
  # "npm run build" builds:
  # * server
  # * microservices
  # * cli
  #
  # https://github.com/immich-app/immich/blob/main/server/Dockerfile
  #
  server:
    plugin: npm
    npm-node-version: "16.19.1"
    source: https://github.com/immich-app/immich.git
    source-tag: v1.50.1
    source-subdir: server
    override-build: |
      cd server
      npm ci
      npm run build
      npm prune --omit=dev --omit=optional
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp -r node_modules $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp -r dist $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp -r bin $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp start-server.sh start-microservices.sh $SNAPCRAFT_PART_INSTALL/usr/src/app
    stage-packages:
      - libc-ares2
      - libicu66
      - libnghttp2-14
      - libnode64
      - libuv1
    after:
      - node

  web:
    plugin: npm
    npm-node-version: "16.19.1"
    source: https://github.com/immich-app/immich.git
    source-tag: v1.50.1
    source-subdir: web
    override-build: |
      cd web
      npm ci
      npm run build
      npm prune --omit=dev
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/src/web
      cp -r node_modules $SNAPCRAFT_PART_INSTALL/usr/src/web
      cp -r build $SNAPCRAFT_PART_INSTALL/usr/src/web
      cp package.json package-lock.json $SNAPCRAFT_PART_INSTALL/usr/src/web
    after:
      - node

  machine-learning:
    plugin: python
    source: https://github.com/immich-app/immich.git
    source-tag: v1.50.1
    source-subdir: machine-learning
    build-environment:
      - SNAPCRAFT_PYTHON_VENV_INTERP_PATH: /root/parts/machine-learning/install/bin/python3
    override-build: |
      snapcraftctl build
      pip install --pre torch  -f https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html
      pip install transformers tqdm numpy scikit-learn scipy nltk sentencepiece flask Pillow
      pip install --no-deps sentence-transformers
      cp machine-learning/src/*.py $SNAPCRAFT_PART_INSTALL/bin
    stage-packages:
      - libgomp1

  redis:
    source: https://github.com/redis/redis.git
    source-tag: 7.0.9
    plugin: make
    build-packages:
      - pkg-config
    override-build: |
      make
      make PREFIX=$SNAPCRAFT_PART_INSTALL install
    prime:
      - bin/redis-server

  postgres:
    source: https://ftp.postgresql.org/pub/source/v15.2/postgresql-15.2.tar.bz2
    plugin: make
    build-packages:
      - libreadline-dev
      - zlib1g-dev
      - uuid-dev
    override-build: |
      ./configure --enable-thread-safety --with-uuid=e2fs --with-gnu-ld
      snapcraftctl build
      cd contrib
      make
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL

  haproxy:
    source: http://git.haproxy.org/git/haproxy-2.6.git
    source-tag: v2.6.10
    plugin: make
    make-parameters:
      - TARGET=linux-glibc
      - USE_OPENSSL=1
      - USE_ZLIB=1
      - USE_PCRE=1
    build-packages:
      - build-essential
      - libssl-dev
      - libpcre3-dev
      - libz-dev
    stage:
      - -usr/local/doc
      - -usr/local/share
    organize:
      usr/local/sbin/haproxy: bin/haproxy

  scripts:
    source: src
    plugin: dump
    stage-packages:
      - util-linux
