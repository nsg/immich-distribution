name: immich-distribution
base: core20
version: '0.1'
summary: experiment
description: |
  todo

grade: devel
confinement: strict

system-usernames:
  snap_daemon: shared

layout:
  $SNAP/usr/src/app/.reverse-geocoding-dump:
    symlink: $SNAP_COMMON/reverse-geocoding-dump
  $SNAP/usr/src/app/upload:
    symlink: $SNAP_COMMON/upload

apps:
  psql:
    command: bin/psql
    plugs:
      - network

  postgres:
    command: bin/postgres
    daemon: simple
    plugs:
      - network-bind

  redis-server:
    command: bin/redis-server $SNAP/etc/redis.conf
    daemon: simple
    plugs:
      - network-bind

  immich-server:
    command: bin/immich-server
    daemon: simple
    after:
      - redis-server
      - postgres
    plugs:
      - network-bind
      - network
    environment:
      NODE_ENV: "production"

  immich-microservices:
    command: bin/immich-microservices
    daemon: simple
    after:
      - redis-server
      - postgres
    plugs:
      - network-bind
      - network
    environment:
      NODE_ENV: "production"

parts:

  #
  # This part downloads a binary release of node
  #
  node:
    plugin: nil
    override-build: |
      if [ ! -f "$SNAPCRAFT_PART_INSTALL/bin/node" ]; then
        curl -s https://nodejs.org/dist/v16.19.1/node-v16.19.1-linux-x64.tar.gz \
        | tar xzf - -C "$SNAPCRAFT_PART_INSTALL" --no-same-owner --strip-components=1
      fi

  #
  # I have overridden the entire build stage, it's based on the commands
  # provided in the Immich Server Dockerfile.
  #
  # "npm run build" builds:
  # * server
  # * microservices
  # * cli
  #
  # https://github.com/immich-app/immich/blob/main/server/Dockerfile
  #
  server:
    plugin: npm
    npm-node-version: "16.19.1"
    source: https://github.com/immich-app/immich.git
    source-tag: v1.50.1
    source-subdir: server
    override-build: |
      cd server
      npm ci
      npm run build
      npm prune --omit=dev --omit=optional
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp -r node_modules $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp -r dist $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp -r bin $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp start-server.sh start-microservices.sh $SNAPCRAFT_PART_INSTALL/usr/src/app
    stage-packages:
      - libc-ares2
      - libicu66
      - libnghttp2-14
      - libnode64
      - libuv1
    after:
      - node

  machine-learning:
    plugin: nil

  web:
    plugin: nil

  redis:
    source: https://github.com/redis/redis.git
    source-tag: 7.0.9
    plugin: make
    build-packages:
      - pkg-config
    override-build: |
      make
      make PREFIX=$SNAPCRAFT_PART_INSTALL install
    prime:
      - bin/redis-server

  postgres:
    source: https://ftp.postgresql.org/pub/source/v15.2/postgresql-15.2.tar.bz2
    plugin: make
    build-packages:
      - libreadline-dev
      - zlib1g-dev
      - uuid-dev
    override-build: |
      ./configure --enable-thread-safety --with-uuid=e2fs --with-gnu-ld
      snapcraftctl build
      cd contrib
      make
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL


  scripts:
    source: src
    plugin: dump
    stage-packages:
      - util-linux
