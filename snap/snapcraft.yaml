name: immich-distribution
title: Immich Distribution
base: core20
adopt-info: server
summary: This is an Immich Distribution packaged by the community.
description: |
  This is an Immich Distribution packaged inside a snap package.
  The package is inspired of the official Immich images. It will be
  similar, but not identical with the official Docker-based
  installation. It will ship the same software, but with limited
  customability. Extra tools are included, they should be
  non-intrusive and you can ignore them if you prefer.

  **More information:** https://github.com/nsg/immich-distribution

  This is **NOT** an official package. For support, open an issue on
  the link above.
grade: stable
confinement: strict
architectures:
  - amd64
assumes:
  - command-chain

system-usernames:
  snap_daemon: shared

layout:
  $SNAP/usr/src/app/.reverse-geocoding-dump:
    symlink: $SNAP_COMMON/reverse-geocoding-dump
  $SNAP/usr/src/app/upload:
    symlink: $SNAP_COMMON/upload
  /usr/etc/ImageMagick-7:
    symlink: $SNAP/usr/etc/ImageMagick-7
  /usr/lib/ImageMagick-7.1.1:
    symlink: $SNAP/usr/lib/ImageMagick-7.1.1

apps:
  psql:
    command: bin/psql
    plugs:
      - network

  postgres:
    command: bin/postgres
    daemon: simple
    restart-delay: 10s
    plugs:
      - network-bind

  redis-server:
    command: bin/redis-server $SNAP/etc/redis.conf
    daemon: simple
    restart-delay: 10s
    plugs:
      - network-bind

  typesense:
    command: bin/typesense
    daemon: simple
    restart-delay: 10s
    plugs:
      - network-bind

  immich-server:
    command: bin/immich-server
    daemon: simple
    restart-delay: 10s
    after:
      - redis-server
      - postgres
      - typesense
    plugs:
      - network-bind
      - network

  immich-microservices:
    command: bin/immich-microservices
    daemon: simple
    restart-delay: 10s
    after:
      - redis-server
      - postgres
      - immich-server
    plugs:
      - network-bind
      - network

  immich-machine-learning:
    command: bin/immich-machine-learning
    daemon: simple
    restart-delay: 10s
    after:
      - redis-server
      - postgres
      - immich-server
    plugs:
      - network-bind
      - network

  haproxy:
    command: bin/haproxy-wrapper
    daemon: simple
    plugs:
      - network-bind
      - network

  sync-service:
    command: bin/sync-service.sh
    daemon: simple
    restart-delay: 10s
    after:
      - immich-server
    plugs:
      - network

  backup:
    command: bin/backup

  import:
    command: bin/import

  lets-encrypt:
    command: bin/acme-init
    plugs:
      - network
      - network-bind

  acme:
    command: bin/acme-service
    daemon: simple
    restart-delay: 60s
    timer: "00:00-24:00/2"
    plugs:
      - network
      - network-bind

parts:
  server:
    plugin: nil
    source: https://github.com/immich-app/immich.git
    source-tag: v1.89.0
    override-build: |
      snapcraftctl set-version "$(git describe --tags)-dist1"

      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/src/app

      # Build the server (and microservices, ml, etc.)
      cd server
      npm ci
      npm run build
      npm prune --omit=dev --omit=optional
      cp -r {node_modules,dist,bin,assets} $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp package.json package-lock.json $SNAPCRAFT_PART_INSTALL/usr/src/app

      # Build the web app
      patch -p0 -i $SNAPCRAFT_PART_SRC/../../patches/src/001-version-announcement-box.patch -d $SNAPCRAFT_PART_BUILD
      cd ../web
      npm ci
      npm run build
      cp -r build $SNAPCRAFT_PART_INSTALL/usr/src/app/www
    after:
      - dependencies
      - patches

  machine-learning:
    plugin: make
    source: parts/machine-learning
    build-packages:
      - git
    stage-packages:
      - libgomp1
    after:
      - dependencies

  dependencies:
    plugin: dump
    source: workdir

  scripts:
    source: src
    plugin: dump
    stage-packages:
      - util-linux
      - fswatch
      - curl
      - jq
      - xz-utils

  sync:
    plugin: nil
    override-build:
      ../../dependencies/install/usr/local/bin/python3 ../../dependencies/install/usr/local/bin/pip3 install watchfiles requests psycopg2-binary pyyaml --target $SNAPCRAFT_PART_INSTALL/opt/pipsyncenv
    after:
      - dependencies

  patches:
    source: patches
    plugin: dump
    stage: []
