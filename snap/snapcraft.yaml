name: immich-distribution
title: Immich Distribution
base: core20
adopt-info: server
summary: This is an Immich Distribution packaged by the community.
description: |
  This is an Immich Distribution packaged inside a snap package.
  The package is inspired of the official Immich images. It will be
  similar, but not identical with the official Docker-based
  installation. It will ship the same software, but with limited
  customability. Extra tools are included, they should be
  non-intrusive and you can ignore them if you prefer.

  **More information:** https://github.com/nsg/immich-distribution

  This is **NOT** an official package. For support, open an issue on
  the link above.
grade: stable
confinement: strict
architectures:
  - amd64
assumes:
  - command-chain

system-usernames:
  snap_daemon: shared

layout:
  $SNAP/usr/src/app/.reverse-geocoding-dump:
    symlink: $SNAP_COMMON/reverse-geocoding-dump
  $SNAP/usr/src/app/upload:
    symlink: $SNAP_COMMON/upload

apps:
  psql:
    command: bin/psql
    plugs:
      - network

  postgres:
    command: bin/postgres
    daemon: simple
    restart-delay: 10s
    plugs:
      - network-bind

  redis-server:
    command: bin/redis-server $SNAP/etc/redis.conf
    daemon: simple
    restart-delay: 10s
    plugs:
      - network-bind

  typesense:
    command: bin/typesense
    daemon: simple
    restart-delay: 10s
    plugs:
      - network-bind

  immich-server:
    command: bin/immich-server
    daemon: simple
    restart-delay: 10s
    after:
      - redis-server
      - postgres
      - typesense
    plugs:
      - network-bind
      - network

  immich-microservices:
    command: bin/immich-microservices
    daemon: simple
    restart-delay: 10s
    after:
      - redis-server
      - postgres
      - immich-server
    plugs:
      - network-bind
      - network

  immich-web:
    command: bin/immich-web
    daemon: simple
    restart-delay: 10s
    after:
      - redis-server
      - postgres
      - immich-server
    plugs:
      - network-bind
      - network

  cli:
    command: bin/immich-cli
    plugs:
      - network

  immich-machine-learning:
    command: bin/immich-machine-learning
    daemon: simple
    restart-delay: 10s
    after:
      - redis-server
      - postgres
      - immich-server
    plugs:
      - network-bind
      - network

  haproxy:
    command-chain:
      - bin/haproxy-chain
    command: bin/haproxy -W -f $SNAP/etc/haproxy.cfg -p $SNAP_DATA/haproxy.pid
    daemon: simple
    plugs:
      - network-bind
      - network

  sync-import-watch:
    command: bin/sync-import-watch
    daemon: simple
    restart-delay: 10s
    timer: "00:00-24:00/1"
    after:
      - immich-server
    plugs:
      - network

  sync-service:
    command: bin/sync-service.sh
    daemon: simple
    restart-delay: 10s
    after:
      - immich-server
    plugs:
      - network

  backup:
    command: bin/backup

  import:
    command: bin/import

  lets-encrypt:
    command: bin/acme-init
    plugs:
      - network
      - network-bind

  acme:
    command: bin/acme-service
    daemon: simple
    restart-delay: 60s
    timer: "00:00-24:00/2"
    plugs:
      - network
      - network-bind

parts:
  node:
    plugin: nil
    override-build: |
      if [ ! -f "$SNAPCRAFT_PART_INSTALL/bin/node" ]; then
        curl -s https://nodejs.org/dist/v18.16.0/node-v18.16.0-linux-x64.tar.xz \
        | tar xJf - -C "$SNAPCRAFT_PART_INSTALL" --no-same-owner --strip-components=1
      fi

  python:
    source: https://www.python.org/ftp/python/3.11.4/Python-3.11.4.tgz
    plugin: make
    override-build: |
      ./configure --enable-optimizations --with-ensurepip=install
      snapcraftctl build
    build-packages:
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - xz-utils
      - libffi-dev
      - libncurses5-dev
      - libgdbm-dev
      - libnss3-dev
    stage-packages:
      - libtcl8.6
      - libtk8.6
      - libxft2

  ffmpeg:
    # Note that I use the bullseye version, instead of bookworm because it closer matches core20
    # Note that the checksum from build-lock.json will not match (fetch it from GitHub)
    plugin: dump
    source: https://github.com/jellyfin/jellyfin-ffmpeg/releases/download/v6.0-4/jellyfin-ffmpeg6_6.0-4-bullseye_amd64.deb
    source-checksum: "sha256/3153726ebb680e0af80a2d36469ac619f6b0604ef3ac9ee3448a9e8e6a0a9ca0"
    stage-packages:
      - libfontconfig1
      - libfreetype6
      - libfribidi0
      - libpng16-16
      - libwebp6
      - libwebpmux3
      - libxau6
      - libxcb-shm0
      - libxcb1
      - libxdmcp6

  libraw:
    plugin: autotools
    source: https://github.com/libraw/libraw/archive/0.21.1.tar.gz
    source-checksum: "sha256/b63d7ffa43463f74afcc02f9083048c231349b41cc9255dec0840cf8a67b52e0"
    override-build: |
      autoreconf --install
      snapcraftctl build
    build-packages:
      - zlib1g-dev
      - libjpeg8-dev
    stage-packages:
      - libgomp1
      - libjpeg-turbo8
      - liblcms2-2

  cgif:
    plugin: meson
    meson-version: "1.2.1"
    source: https://github.com/dloebl/cgif.git
    source-tag: "V0.3.2"

  imagemagick:
    plugin: make
    source: https://github.com/ImageMagick/ImageMagick/archive/7.1.1-13.tar.gz
    source-checksum: "sha256/8e3ce1aaad19da9f2ca444072bcc631d193a219e3ee11c13ad6d3c895044142c"
    override-build: |
      ./configure --with-modules
      snapcraftctl build
    build-packages:
      - libltdl-dev
    after:
      - cgif
    stage-packages:
      - libcairo2
      - libdatrie1
      - libde265-0
      - libdjvulibre21
      - libfontconfig1
      - libfreetype6
      - libfribidi0
      - libgomp1
      - libgraphite2-3
      - libharfbuzz0b
      - libheif1
      - libicu66
      - libilmbase24
      - libjbig0
      - libjpeg-turbo8
      - liblcms2-2
      - liblqr-1-0
      - libltdl7
      - libnuma1
      - libopenexr24
      - libopenjp2-7
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpangoft2-1.0-0
      - libpixman-1-0
      - libpng16-16
      - libthai0
      - libtiff5
      - libwebp6
      - libwebpdemux2
      - libwebpmux3
      - libwmf0.2-7
      - libx11-6
      - libx265-179
      - libxau6
      - libxcb-render0
      - libxcb-shm0
      - libxcb1
      - libxdmcp6
      - libxext6
      - libxml2
      - libxrender1

  libvips:
    plugin: meson
    meson-version: "1.2.1"
    source: https://github.com/libvips/libvips/releases/download/v8.14.2/vips-8.14.2.tar.xz
    source-checksum: "sha256/27dad021f0835a5ab14e541d02abd41e4c3bd012d2196438df5a9e754984f7ce"
    build-packages:
      # From https://github.com/libvips/libvips/wiki/Build-for-Ubuntu
      - libfftw3-dev
      - libopenexr-dev
      - libgsf-1-dev
      - libglib2.0-dev
      - liborc-dev
      - libopenslide-dev
      - libmatio-dev
      - libwebp-dev
      - libjpeg-turbo8-dev
      - libexpat1-dev
      - libexif-dev
      - libtiff5-dev
      - libcfitsio-dev
      - libpoppler-glib-dev
      - librsvg2-dev
      - libpango1.0-dev
      - libopenjp2-7-dev
      - libimagequant-dev
      # From errors complaining about missing packages during build
      - libgirepository1.0-dev
      # Packages enabling more features in libvips
      - libheif-dev
      - libtiff-dev
    stage-packages:
      - libaec0
      - libasn1-8-heimdal
      - libbrotli1
      - libcairo-gobject2
      - libcairo2
      - libcfitsio8
      - libcurl3-gnutls
      - libdatrie1
      - libde265-0
      - libexif12
      - libfftw3-double3
      - libfontconfig1
      - libfreetype6
      - libfribidi0
      - libgdk-pixbuf2.0-0
      - libgif7
      - libgomp1
      - libgraphite2-3
      - libgsf-1-114
      - libgssapi3-heimdal
      - libharfbuzz0b
      - libhcrypto4-heimdal
      - libhdf5-103
      - libheif1
      - libheimbase1-heimdal
      - libheimntlm0-heimdal
      - libhx509-5-heimdal
      - libicu66
      - libilmbase24
      - libimagequant0
      - libjbig0
      - libjpeg-turbo8
      - libkrb5-26-heimdal
      - liblcms2-2
      - libldap-2.4-2
      - liblqr-1-0
      - libltdl7
      - libmagickcore-6.q16-6
      - libmatio9
      - libnghttp2-14
      - libnspr4
      - libnss3
      - libnuma1
      - libopenexr24
      - libopenjp2-7
      - libopenslide0
      - liborc-0.4-0
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpangoft2-1.0-0
      - libpixman-1-0
      - libpng16-16
      - libpoppler-glib8
      - libpoppler97
      - libpsl5
      - libroken18-heimdal
      - librsvg2-2
      - librtmp1
      - libsasl2-2
      - libssh-4
      - libsz2
      - libthai0
      - libtiff5
      - libwebp6
      - libwebpdemux2
      - libwebpmux3
      - libwind0-heimdal
      - libx11-6
      - libx265-179
      - libxau6
      - libxcb-render0
      - libxcb-shm0
      - libxcb1
      - libxdmcp6
      - libxext6
      - libxml2
      - libxrender1
    after:
      - cgif

  # "npm run build" builds: server, microservices, cli
  server:
    plugin: npm
    npm-node-version: "18.16.0"
    source: https://github.com/immich-app/immich.git
    source-tag: v1.72.0
    source-subdir: server
    override-build: |
      snapcraftctl set-version "$(git describe --tags)-dist1"
      cd server
      npm ci
      npm run build
      npm prune --omit=dev --omit=optional
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp -r node_modules $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp -r dist $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp -r bin $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp package.json $SNAPCRAFT_PART_INSTALL/usr/src/app
      cp start-server.sh start-microservices.sh $SNAPCRAFT_PART_INSTALL/usr/src/app
    stage-packages:
      - libc-ares2
      - libicu66
      - libnghttp2-14
      - libnode64
      - libuv1
      - libaec0
      - libcairo-gobject2
      - libcairo2
      - libcfitsio8
      - libcurl3-gnutls
      - libdatrie1
      - libexif12
      - libfftw3-double3
      - libfribidi0
      - libgdk-pixbuf2.0-0
      - libgif7
      - libgraphite2-3
      - libgsf-1-114
      - libharfbuzz0b
      - libhdf5-103
      - libilmbase24
      - libimagequant0
      - libjbig0
      - libjpeg-turbo8
      - liblcms2-2
      - liblqr-1-0
      - libltdl7
      - libmagickcore-6.q16-6
      - libmatio9
      - libnspr4
      - libnss3
      - libopenexr24
      - libopenjp2-7
      - libopenslide0
      - liborc-0.4-0
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpangoft2-1.0-0
      - libpixman-1-0
      - libpoppler-glib8
      - libpoppler97
      - librsvg2-2
      - libsz2
      - libthai0
      - libtiff5
      - libwebp6
      - libwebpdemux2
      - libwebpmux3
      - libxcb-render0
      - libxcb-shm0
      - libxml2
    after:
      - node
      - libvips
      - imagemagick

  web:
    plugin: npm
    npm-node-version: "18.16.0"
    source: https://github.com/immich-app/immich.git
    source-tag: v1.72.0
    source-subdir: web
    override-build: |
      patch -p0 -i $SNAPCRAFT_PART_SRC/../../patches/src/001-version-announcement-box.patch -d $SNAPCRAFT_PART_BUILD
      cd web
      npm ci
      npm run build
      npm prune --omit=dev
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/src/web
      cp -r node_modules $SNAPCRAFT_PART_INSTALL/usr/src/web
      cp -r build $SNAPCRAFT_PART_INSTALL/usr/src/web
      cp package.json package-lock.json $SNAPCRAFT_PART_INSTALL/usr/src/web
    after:
      - node
      - patches

  machine-learning:
    plugin: make
    source: parts/machine-learning
    build-packages:
      - git
    stage-packages:
      - libgomp1
    after:
      - python

  cli:
    plugin: npm
    npm-node-version: "18.16.0"
    source: https://github.com/immich-app/CLI.git
    source-tag: v0.40.2
    override-build: |
      npm install
      npm run build
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/src/cli
      cp -r node_modules $SNAPCRAFT_PART_INSTALL/usr/src/cli
      cp -r bin $SNAPCRAFT_PART_INSTALL/usr/src/cli
      cp package.json package-lock.json $SNAPCRAFT_PART_INSTALL/usr/src/cli
    after:
      - node

  redis:
    source: https://github.com/redis/redis.git
    source-tag: 7.0.9
    plugin: make
    build-packages:
      - pkg-config
    override-build: |
      make
      make PREFIX=$SNAPCRAFT_PART_INSTALL install
    prime:
      - bin/redis-server

  postgres:
    source: https://ftp.postgresql.org/pub/source/v15.2/postgresql-15.2.tar.bz2
    plugin: make
    build-packages:
      - libreadline-dev
      - zlib1g-dev
      - uuid-dev
    override-build: |
      ./configure --enable-thread-safety --with-uuid=e2fs --with-gnu-ld
      snapcraftctl build
      cd contrib
      make
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL

  typesense:
    source: https://dl.typesense.org/releases/0.24.1/typesense-server-0.24.1-linux-amd64.tar.gz
    plugin: dump
    organize:
      typesense-server: bin/typesense-server

  haproxy:
    source: http://git.haproxy.org/git/haproxy-2.6.git
    source-tag: v2.6.10
    plugin: make
    make-parameters:
      - TARGET=linux-glibc
      - USE_OPENSSL=1
      - USE_ZLIB=1
      - USE_PCRE=1
    build-packages:
      - build-essential
      - libssl-dev
      - libpcre3-dev
      - libz-dev
    stage:
      - -usr/local/doc
      - -usr/local/share
    organize:
      usr/local/sbin/haproxy: bin/haproxy

  lego:
    source: https://github.com/go-acme/lego.git
    source-tag: v4.10.2
    plugin: go
    build-environment:
      - GO111MODULE: "on"
    override-build: |
      make build
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp dist/lego $SNAPCRAFT_PART_INSTALL/bin

  scripts:
    source: src
    plugin: dump
    stage-packages:
      - util-linux
      - fswatch
      - curl
      - jq
      - xz-utils

  sync:
    plugin: nil
    override-build:
      ../../python/install/usr/local/bin/python3 ../../python/install/usr/local/bin/pip3 install watchfiles requests psycopg2-binary --target $SNAPCRAFT_PART_INSTALL/opt/pipsyncenv
    after:
      - python

  patches:
    source: patches
    plugin: dump
    stage: []
