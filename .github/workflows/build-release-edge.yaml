name: Build and release snap package to edge channel

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'LICENSE'

  workflow_dispatch:

jobs:
  haproxy:
    name: Build HAProxy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: cache
        with:
          key: ${{ hashFiles('dependencies/haproxy/snapcraft.yaml') }}
          path: |
            dependencies/**/*.snap

      - name: Build snap package
        uses: snapcore/action-build@v1
        if: steps.cache.outputs.cache-hit != 'true'
        id: build
        with:
          path: dependencies/haproxy

      - name: Save snap package as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: haproxy
          if-no-files-found: error
          path: |
            dependencies/**/*.snap

  prepare-dependencies:
    name: Prepare dependencies
    runs-on: ubuntu-latest
    needs:
      - haproxy

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: dependencies/artifacts

      - name: List snap dependency artifacts
        run: |
          find dependencies

      - name: Extract snap package
        run: |
          find dependencies/artifacts
          mkdir -p workdir
          for artifact in $(cd dependencies/artifacts; ls -1); do
            unsquashfs -d workdir/$artifact dependencies/artifacts/$artifact/$artifact/*.snap
            rm -rf workdir/$artifact/meta
            rm -rf workdir/$artifact/snap
            mv workdir/$artifact/* workdir
            rmdir workdir/$artifact
          done

      - name: Compress workdir
        run: |
          tar -czf workdir.tar.gz workdir

      - name: List workdir
        run: |
          find workdir

      - name: Save workdir
        uses: actions/upload-artifact@v3
        with:
          name: workdir
          if-no-files-found: error
          path: |
            workdir.tar.gz
  
  build:
    name: Build, Test and Release Snap Package
    runs-on: ubuntu-latest
    needs: prepare-dependencies

    services:
      selenium:
        image: selenium/standalone-chrome:latest
        options: --shm-size=2gb
        ports:
          - 4444:4444

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: workdir

      - name: Extract workdir
        run: |
          tar -xzf workdir.tar.gz

      - name: Debug
        run: |
          pwd
          find .

      - name: Build snap package
        uses: snapcore/action-build@v1
        id: build

      - name: TEST | Install package
        run: sudo snap install --dangerous ${{ steps.build.outputs.snap }}

      - name: TEST | Install requirements
        run: pip install -r tests/requirements.txt

      - name: TEST | Run Selenium Tests
        run: make ci -C tests

      - name: Upload snap package to edge channel
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          release: edge
