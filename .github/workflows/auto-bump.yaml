name: Automatically bump version

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0,6,12,18 * * *"
  pull_request:

concurrency:
  group: "bump"
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Bump version
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config --global user.name "Github Action Automation"
          git config --global user.email "nsg@users.noreply.github.com"

          OLD_VERSION=$(cat VERSION)
          make version-update > /tmp/version-update 2>&1
          NEW_VERSION=$(cat VERSION)
          BRANCH_NAME="bump-$NEW_VERSION"
          REMOTE_URL=$(git remote get-url origin)
          NEW_VERSION_MAJOR_MINOR=$(echo $NEW_VERSION | cut -d. -f1-2)

          if ! [[ "$NEW_VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Version $NEW_VERSION is not a valid version number."
            exit 1
          fi

          if git ls-remote --exit-code "$REMOTE_URL" "refs/heads/$BRANCH_NAME" >/dev/null 2>&1; then
            echo "Branch $BRANCH_NAME already exists."
            exit 0
          fi

          gh issue list \
            --label new-version \
            --state open \
            --title "Immich ${NEW_VERSION_MAJOR_MINOR:1} released" \
            --limit 1

          #   echo "Issue for $NEW_VERSION_MAJOR_MINOR already exists."
          #   exit 0
          # fi

          echo "
          This PR bumps the version from **$OLD_VERSION** to **$NEW_VERSION**.
          Please review the changes and merge this PR if everything looks good.

          ## Version update output
          $(cat /tmp/version-update)

          ## Upstream release notes
          https://github.com/immich-app/immich/releases/tag/$NEW_VERSION
          
          ## Monitored upstream files
          $(./update.sh $OLD_VERSION $NEW_VERSION)

          ## Checklist
          * Review the changes above
          * Possible write a news entry (and push it to this PR)
          * Wait for the CI to finish
          * Merge the PR
          " > /tmp/PR-BODY.md

          echo "
          Tracking issue for Immich $NEW_VERSION.


          " > ISSUE-BODY.md

          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            git checkout -b $BRANCH_NAME
            git add .
            git commit -m "Bump version to $NEW_VERSION"
            git push -u origin $BRANCH_NAME

            # gh issue create \
            #   --title "Immich $NEW_VERSION released" \
            #   --body-file /tmp/ISSUE-BODY.md \

            gh pr create \
              --base master \
              --assignee=nsg \
              --title "Bump $NEW_VERSION" \
              --body-file /tmp/PR-BODY.md
          fi
