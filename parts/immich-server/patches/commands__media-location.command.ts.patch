diff --git a/server/src/commands/media-location.command.ts b/server/src/commands/media-location.command.ts
index 1234567..abcdefg 100644
--- a/server/src/commands/media-location.command.ts
+++ b/server/src/commands/media-location.command.ts
@@ -1,9 +1,15 @@
-import { Command, CommandRunner, InquirerService, Question, QuestionSet } from 'nest-commander';
+import { Command, CommandRunner, InquirerService, Option, Question, QuestionSet } from 'nest-commander';
 import { CliService } from 'src/services/cli.service';
 
+interface MediaLocationOptions {
+  from?: string;
+  to?: string;
+}
+
 @Command({
   name: 'change-media-location',
   description: 'Change database file paths to align with a new media location',
+  options: { isDefault: false },
 })
 export class ChangeMediaLocationCommand extends CommandRunner {
   constructor(
@@ -27,19 +33,41 @@ export class ChangeMediaLocationCommand extends CommandRunner {
     }
   }
 
-  async run(): Promise<void> {
+  async run(passedParams: string[], options: MediaLocationOptions): Promise<void> {
     try {
       await this.showSamplePaths();
 
-      const { oldValue, newValue } = await this.inquirer.ask<{ oldValue: string; newValue: string }>(
-        'prompt-media-location',
-        {},
-      );
+      // Use command line arguments if provided, otherwise use interactive prompts
+      let oldValue: string;
+      let newValue: string;
+      
+      if (options.from && options.to) {
+        oldValue = options.from;
+        newValue = options.to;
+      } else {
+        const prompted = await this.inquirer.ask<{ oldValue: string; newValue: string }>(
+          'prompt-media-location',
+          {},
+        );
+        oldValue = prompted.oldValue;
+        newValue = prompted.newValue;
+      }
 
       const success = await this.service.migrateFilePaths({
         oldValue,
         newValue,
         confirm: async ({ sourceFolder, targetFolder }) => {
+          // Skip confirmation if using command line arguments
+          if (options.from && options.to) {
+            console.log(`
+  Previous value: ${oldValue}
+  Current value:  ${newValue}
+
+  Changing  from "${sourceFolder}/*" to "${targetFolder}/*"
+`);
+            return true;
+          }
+          
           console.log(`
   Previous value: ${oldValue}
   Current value:  ${newValue}
@@ -73,6 +101,22 @@ export class ChangeMediaLocationCommand extends CommandRunner {
       console.error('Unable to update database file paths.');
     }
   }
+
+  @Option({
+    flags: '--from <path>',
+    description: 'Source path to migrate from (skips interactive prompt when used with --to)',
+  })
+  parseFrom(value: string): string {
+    return value;
+  }
+
+  @Option({
+    flags: '--to <path>',
+    description: 'Target path to migrate to (skips interactive prompt when used with --from)',
+  })
+  parseTo(value: string): string {
+    return value;
+  }
 }
 
 const currentValue = process.env.IMMICH_MEDIA_LOCATION || '';
